import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { Inter } from "next/font/google";
import { GoogleOAuthProvider } from "@react-oauth/google";
import { Toaster } from "react-hot-toast";
import { QueryClientProvider, QueryClient } from "@tanstack/react-query";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";

const inter = Inter({ subsets: ["latin"] });

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const queryClient = new QueryClient();

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      {/* <QueryClientProvider client={queryClient}> */}
        <GoogleOAuthProvider clientId={"66227130032-u50sk52et6jq1s7ke292418nrdre2nrm.apps.googleusercontent.com"}>
          <body
            className={`${inter.className} ${geistSans.variable} ${geistMono.variable} antialiased`}
          >
            {children}
            <Toaster />
            {/* <ReactQueryDevtools /> */}
          </body>
        </GoogleOAuthProvider>
      {/* </QueryClientProvider> */}
    </html>
  );
}
